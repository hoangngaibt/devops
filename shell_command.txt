 cat /proc/meminfo : đây là đường dẫn (đường dẫn tuyệt đối) tới file chứa thông tin RAM có tên là meminfo
 free [-b, -k, -m, -g, --tera, -h]
 cat /proc/cpuinfo : Lệnh xem thông tin CPU
 uname -a : Lệnh hiển thị thông tin kernel
 uname -m
 cat /etc/redhat-release : Lệnh hiển thị phiên bản Centos
 df -h : Lệnh xem dung lượng ổ cứng
 dmidecode -t [0...42] : Xem thông tin model, serial,… phần cứng
 top : Lệnh xem các tiến trình
 du : vd:du -sh /etc; Lệnh xem dung lượng của thư mục
 hostname : Lệnh xem tên server
 ifconfig : Lệnh xem địa chỉ ip
 ls [-l, -a] [Path]
 cd [Path] : 
 pwd : cho biết thư mục hiện hành
 passwd : đổi mật khẩu đăng nhập của user đang login.
 cp [-R, -r] Source Dest : dùng để sao chép file
 mv [-i, -f] Source Dest : dùng để đổi tên / di chuyển thư mục hoặc file từ nơi này sang nơi khác
 mkdir [-p] directory : dùng để tạo thư mục
 rmdir [-p] directory : dùng để xóa thư mục rỗng
 rm [-f, -i, -R, -r] file : dùng để xoá file/thư mục
 shutdown [-h, -r, -c] [now, hh:mm, +m] [wall] : 
 reboot : 
 init [3, 0]
 date :  xem ngày giờ hệ thống
 systemctl set-default multi-user.target : Thiết lập Multi-user.target mặc định khi khởi động
 systemctl isolate multi-user.target : Từ graphical sang command mode
 systemctl set-default graphical.target : Thiệt lập Graphical.target mặc định khi khởi động
 systemctl isolate graphical.target : Từ command mode sang graphical
 cat /etc/passwd : 
 cat /etc/shadown : 
 useradd [-c, -u, -d, -g, -G, -s] login_name : Tạo tài khoản user
 usermod [-c, -l, -g, -G, -s, -L] login_name : Sửa thông tin tài khoản
 userdel [-r] login_name : Xóa tài khoản user
 chage [-l, -E, -I, -m, -M, -W] login_name :  Dùng để thiết lập các chính sách (policy) cho user
 cat /etc/group : Là tập tin văn bản chứa thông tin về nhóm user trên máy
 groupadd [-g] group : Tạo nhóm
 groupmod [-g, -n] group : Sửa thông tin nhóm
 groupdel group :  dùng để xóa nhóm
 ls –l : Quyền truy xuất trên thư mục và tập tin được trình bày 
 chmod [-R] Mode file : Thay đổi quyền truy xuất trên thư mục/tập tin
 chown [-R] Owner file : Thay đổi người sở hữu thư mục/tập tin
 chgrp [-R] Group file : Thay đổi nhóm sở hữu thư mục/tập tin
 vi <file> : command mode sang text mode => i , a. :x hoặc :wq thoát có lưu, :q! thoát không lưu
/etc/hosts : Dùng phân giải hostname không thể phân giải được. Có thể dùng thay DNS trong hệ thống mạng LAN
/etc/resolves : Chỉ định DNS server để phân giải tên miền
/etc/sysconfig/network-scripts/ifcfg-<tên card mạng> : trong thư mục này chứa thông tin cấu hình của từng card mạng.
 ifconfig : Xem địa chỉ ip
 ifup têncard : bật card mạng
 ifdown têncard : tắt card mạng
 service network restart hoặc  /etc/init.d/network restart hoăc  systemctl restart network.service  : Khởi động dịch vụ
 route : Xem thông tin gateway
ip link
ip -s -h l show dev enth0
ip a show dev enp1s0
sudo ip a change 192.168.122.170 dev enp1s0
ip route
sudo ip route add default via 192.168.122.1 dev enp1s0
nmcli device status
nmcli con show 
nmcli connection show enp1s0
nslookup redhat.com
tracepath -n sat65server
ss

 source /etc/profile.d/ant.sh : Sau đó, set cho biến môi trường này tồn tại vĩnh viễn :

 ps aux | grep sshd : Check if the process sshd is running
 netstat -plant | grep :22 : check if the process sshd is listening on port 22
 netstat -tulnp
 lsof -i : you can use the lsof command to check if the port 22 TCP file is open
 telnet localhost 22 : try to telnet to port 22
 service sshd status : check the status of the sshd service

 lsblk hoac  fdisl -l hoac  df -h : phan vung o dia

 hostnamectl set-hostname "elasticsearch1.linuxtechi.local" : set hostname
  exec bash : cap nhat hostname luon

mount /dev/mapper/vg_postgre-lv_postgre  /var/postgres : mount o len
stat -c '%A %a %n' file_name   // check permission file
last -a   // check history session ssh

sed -i -e 's/\r$//' filename.sh  //change format file

pwd //directory location

ansible-playbook configzabiixagent.yaml -i hostsconnect.yaml --extra-vars "ansible_sudo_pass=123@123a"

cat ~/.ssh/id_rsa.pub | ssh demo@198.51.100.0 "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >>  ~/.ssh/authorized_keys"

sudo du -sh /var
sudo du -sh --apparent-size /var
sudo du -h /var/ | sort -rh | head -5

sudo timedatectl set-timezone Asia/Ho_Chi_Minh
/ubuntu
apt install lsscsi
//scan disk
lsscsi
echo 1 > /sys/class/scsi_device/0:0:1:0/device/rescan
Extend disk:
echo -e "d\n 3\n n\n 3\n \n \n N\n w\n"| sudo fdisk -c /dev/sda
hoặc
d
3
n
3
default
default
N(No want to remove the signature)
w

// grows file system
xfs_growfs /dev/sda3
ps -ef | egrep '(httpd|apache2|apache)' | grep -v `whoami` | grep -v root | head -n1 | awk '{print $1}'

ps aux | grep -v root | grep apache | cut -d\  -f1 | sort | uniq

Kiểm tra tấn công chèn script:

grep -i "<script>" --color access.log
Trích xuất IP nguồn:

 awk '{print $1}' access.log
Check mỗi IP request bao nhiều lần:

  awk '{print $1}' access.log | sort | uniq -c | sort -rn
  
grep	Tìm các dòng chứa chuỗi được chỉ định
awk	    Phân tách cột và tìm kiếm hàng có điều kiện
sort	Sắp xếp dòng
uniq	Loại bỏ các hàng trùng lặp và đếm
wc	    Đếm số ký tự, số dòng
sed	    Thay thế điều kiện quy định

systemctl list-units --type=service --state=running 

rm -rf /var/lib/apt/lists/*

getent passwd {1000..60000}
cut -d: -f1 /etc/passwd
or
awk -F: '{print $1}' /etc/passwd

for f in *.yaml; do
    sed -i '/---/i imagePullSecrets:\n        - name: registry' $f
    sed -i 's/imagePullSecrets:/      imagePullSecrets:/g' $f
done

// delete to end file
for f in *end.yaml; do
    sed -i '/type: ClusterIP/,$d' $f
done

// delete to end line
for f in *.yaml; do
    sed -i '/memory:/d' $f
    sed -i '/cpu:/d' $f
    sed -i '/resources:/d' $f
    sed -i '/limits:/d' $f
    sed -i '/requests:/d' $f
done

ps -ef --forest | grep nginx

sed -i '/point_add_delete/{n;d}' test_01.txt       #xóa 1 dòng dưới "point_add_delete"

sed -i '/point_add_delete/ a /**' test_01.txt      #thêm nội dung ở dòng mới dưới "point_add_delete"

sed -i "4d" test_01.txt  # xóa dòng chỉ định (VD dòng 4)

sed -i '3 a /**' test_01.txt # thêm nội dung dưới dòng chỉ định ( VD thêm dưới line 3)

sed -i 's/image:.*$/image:/' test.yaml  # xóa từ pattern đến hết dòng

sed -i 's/image:/& 0.3/' test.yaml  #thêm vào ngay sau pattern.

sed -i '/pattern/d' file  # xóa dòng chứa pattern

2>&1 | sed "s/.*/$red&$default/"

sed -i 's/\(^SELINUX=\).*/\SELINUX=disabled/' /etc/sysconfig/selinux

// xóa đến cuối dòng;
    - sed -i 's|image-$IMAGE:.*$|image-$IMAGE:|' values.yaml
    - sed -i "s|image-$IMAGE:|& $IMAGE_NAME:$CI_COMMIT_TAG|" values.yaml 
// get kube config trên rke
kubectl --kubeconfig $(docker inspect kubelet --format '{{ range .Mounts }}{{ if eq .Destination "/etc/kubernetes" }}{{ .Source }}{{ end }}{{ end }}')/ssl/kubecfg-kube-node.yaml get configmap -n kube-system full-cluster-state -o json | jq -r .data.\"full-cluster-state\" | jq -r .currentState.certificatesBundle.\"kube-admin\".config | sed -e "/^[[:space:]]*server:/ s_:.*_: \"https://127.0.0.1:6443\"_" > kubeconfig_admin.yaml

//reset passwd rancher
kubectl -n cattle-system exec $(kubectl -n cattle-system get pods -l app=rancher | grep '1/1' | head -1 | awk '{ print $1 }') -- reset-password

//không hỏi xác thực host ssh, thêm vào .ssh/config
Host *
StrictHostKeyChecking no

// check balloon trên VMware
vmware-toolbox-cmd stat balloon

// check service running listen on port
netstat -anpe | grep "80" | grep "LISTEN"

// remove rke node
docker rm -f $(docker ps -qa)
docker rmi -f $(docker images -q)
docker volume rm $(docker volume ls -q)
for mount in $(mount | grep tmpfs | grep '/var/lib/kubelet' | awk '{ print $3 }') /var/lib/kubelet /var/lib/rancher; do umount $mount; done

rm -rf /etc/ceph \
       /etc/cni \
       /etc/kubernetes \
       /opt/cni \
       /opt/rke \
       /run/secrets/kubernetes.io \
       /run/calico \
       /run/flannel \
       /var/lib/calico \
       /var/lib/etcd \
       /var/lib/cni \
       /var/lib/kubelet \
       /var/lib/rancher/rke/log \
       /var/log/containers \
       /var/log/kube-audit \
       /var/log/pods \
       /var/run/calico


 kubectl run curl-from-cluster -it --rm --image=pstauffer/curl --restart=Never -- curl -svk https://kubernetes.default/api/

while IFS="," read -r rec_column1 rec_column2 rec_column3 rec_column4
do
  echo "Displaying Record-$rec_column1"
  echo "Quantity: $rec_column2"
  echo "Price: $rec_column3"
  echo "Value: $rec_column4"
  echo ""
done < <(tail -n +2 input.csv)

lscpu   # show cpu
chcpu -e 6-11  ## enable cpu 6 đến 11
